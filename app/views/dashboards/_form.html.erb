<div class="d-flex flex-wrap">
  <%# Search category %>
  <div class="mr-5 mb-5">
    <div class="mb-2">
      <%= t('.search_category.title') %>
      <i class="far fa-question-circle text-muted"></i>
    </div>

    <div class="mb-1">
      <div id="search-category-buttons" class="btn-group" role="group">
        <button type="button" class="btn-friends btn btn-outline-secondary" data-value="friends"><%= t('.search_category.friends.label') %></button>
        <button type="button" class="btn-followers btn btn-primary" data-value="followers"><%= t('.search_category.followers.label') %></button>
      </div>
    </div>

    <div class="friends-selected-text small text-muted" style="display: none;"><%= t('.search_category.friends.help_html') %></div>
    <div class="followers-selected-text small text-muted"><%= t('.search_category.followers.help_html') %></div>
  </div>

  <%# Search type %>
  <div class="mb-5">
    <div class="mb-2">
      <%= t('.search_type.title') %>
      <i class="far fa-question-circle text-muted"></i>
    </div>

    <div class="mb-1">
      <div id="search-type-buttons" class="btn-group" role="group">
        <button type="button" class="btn-job btn btn-primary" data-value="job"><%= t('.search_type.job') %></button>
        <button type="button" class="btn-location btn btn-outline-secondary" data-value="location"><%= t('.search_type.location') %></button>
        <button type="button" class="btn-keyword btn btn-outline-secondary" data-value="keyword"><%= t('.search_type.keyword') %></button>
      </div>
    </div>

    <div class="job-selected-text small text-muted"><%= t('.search_type.job_help_html') %></div>
    <div class="location-selected-text small text-muted" style="display: none;"><%= t('.search_type.location_help_html') %></div>
    <div class="keyword-selected-text small text-muted" style="display: none;"><%= t('.search_type.keyword_help_html') %></div>
  </div>
</div>

<%# Search value %>
<div class="mb-5">
  <div class="mb-2">
    <%= t('.search_value.title') %>
    <i class="far fa-question-circle text-muted"></i>
  </div>
  <select id="search-value" class="form-control" style="width: initial;"></select>
</div>

<%# Submit %>
<div class="mb-5">
  <button id="job-submit" type="submit" class="btn btn-primary"><%= t('.search_value.submit') %></button>
</div>

<div class="mb-5">
  <hr>
</div>

<div class="pb-5" style="min-height: 300px;">
  <div id="search-response"></div>
</div>


<script>
  $(function () {
    var friendsButton = $('.btn-friends');
    var followersButton = $('.btn-followers');
    var jobButton = $('.btn-job');
    var locationButton = $('.btn-location');
    var keywordButton = $('.btn-keyword');
    var valueSelector = $('#search-value');
    var lastUid;

    function resetSearchState() {
      $('#search-response').empty();
      lastUid = null;
    }

    function activateButton(button) {
      button.removeClass('btn-outline-secondary').addClass('btn-primary');
    }

    function deactivateButton(button) {
      button.removeClass('btn-primary').addClass('btn-outline-secondary');
    }

    function switchCategoryButton() {
      resetSearchState();

      if ($(this).hasClass('btn-friends')) {
        deactivateButton(followersButton);
        activateButton(friendsButton);
        $('.friends-selected-text').hide().fadeIn(500);
        $('.followers-selected-text').hide();
      } else if ($(this).hasClass('btn-followers')) {
        deactivateButton(friendsButton);
        activateButton(followersButton);
        $('.friends-selected-text').hide();
        $('.followers-selected-text').hide().fadeIn(500);
      }
    }

    function switchTypeButton() {
      resetSearchState();

      if ($(this).hasClass('btn-job')) {
        activateButton(jobButton)
        deactivateButton(locationButton)
        deactivateButton(keywordButton)
        $('.job-selected-text').hide().fadeIn(500);
        $('.location-selected-text').hide();
        $('.keyword-selected-text').hide();
      } else if ($(this).hasClass('btn-location')) {
        deactivateButton(jobButton)
        activateButton(locationButton)
        deactivateButton(keywordButton)
        $('.job-selected-text').hide();
        $('.location-selected-text').hide().fadeIn(500);
        $('.keyword-selected-text').hide();
      } else if ($(this).hasClass('btn-keyword')) {
        deactivateButton(jobButton)
        deactivateButton(locationButton)
        activateButton(keywordButton)
        $('.job-selected-text').hide();
        $('.location-selected-text').hide();
        $('.keyword-selected-text').hide().fadeIn(500);
      }
    }

    function switchValueSelector() {
      resetSearchState();
    }

    friendsButton.on('click', switchCategoryButton);
    followersButton.on('click', switchCategoryButton);
    jobButton.on('click', switchTypeButton);
    locationButton.on('click', switchTypeButton);
    keywordButton.on('click', switchTypeButton);
    valueSelector.on('change', switchValueSelector);

    function currentCategory() {
      return $('#search-category-buttons').find('.btn-primary').data('value');
    }

    function currentType() {
      return $('#search-type-buttons').find('.btn-primary').data('value');
    }

    function currentValue() {
      return $('#search-value').val();
    }

    function appendSearchResponse(users) {
      if (!users || users.length === 0) {
        if (lastUid) {
          // Do nothing
        } else {
          resetSearchState();
          $('#search-response').empty().text('No results found').hide().fadeIn(500);
        }
      } else {
        var container = $('<div/>', {style: 'display: none;'});
        var template = $('#search-response-user-template').html();

        users.forEach(function (user) {
          if (user.description) {
            user.description = user.description.replace('\n', '<br>').replace(/https?:\/\//g, '');
            user.description = linkifyHtml(user.description, {defaultProtocol: 'https'});
          }
          var rendered = $(Mustache.render(template, user));
          rendered.find('img').each(function () {
            var img = $(this);
            img.attr('src', img.attr('data-src'));
          });
          container.append(rendered);
        })
        $('#search-response').append(container)
        container.fadeIn(500);
        $('#search-response').append($('<div/>', {text: 'Loading'}).lazyload().one('appear', function () {
          var elem = $(this);
          search(function () {
            elem.remove();
          });
        }));

        lastUid = users[users.length - 1].uid;
      }
    }

    function search(callback) {
      var category = currentCategory();
      var type = currentType();
      var limit = 10;

      if (category !== 'friends' && category !== 'followers') {
        console.warn('Invalid category');
        return
      }

      if (type !== 'job' && type !== 'location' && type !== 'keyword') {
        console.warn('Invalid type');
        return
      }

      var url = '<%= raw api_searches_path %>';
      var params = {category: category, type: type, value: currentValue(), limit: limit, last_uid: lastUid}
      console.log('request', params);

      $.get(url, params).done(function (res) {
        console.log('response', res);
        appendSearchResponse(res.users);
        if (callback) {
          callback();
        }
      });
    }

    function updateSearchValueOptions() {
      var category = currentCategory();
      var type = currentType();

      if (category === 'friends') {
        if (type === 'job') {
          setJobOptions();
        } else if (type === 'location') {
          setLocationOptions();
        } else if (type === 'keyword') {
          setKeywordOptions();
        }
      } else if (category === 'followers') {
        if (type === 'job') {
          setJobOptions();
        } else if (type === 'location') {
          setLocationOptions();
        } else if (type === 'keyword') {
          setKeywordOptions();
        }
      }
    }

    $('#search-category-buttons').on('click', function () {
      updateSearchValueOptions();
    });

    $('#search-type-buttons').on('click', function () {
      updateSearchValueOptions();
    });

    $('#job-submit').on('click', function () {
      search();
      return false;
    });

    function setOptions(options) {
      $('#search-value').empty();
      options.forEach(function (option) {
        var tag = $('<option/>', {value: option.value, text: option.label});
        $('#search-value').append(tag);
      });
    }

    function setJobOptions() {
      var url = '<%= raw api_job_options_path %>';
      var category = currentCategory();

      $.get(url, {category: category}).done(function (res) {
        setOptions(res.options);
      });
    }

    function setLocationOptions() {
      var url = '<%= raw api_location_options_path %>';
      var category = currentCategory();

      $.get(url, {category: category}).done(function (res) {
        setOptions(res.options);
      });
    }

    function setKeywordOptions() {
      var url = '<%= raw api_keyword_options_path %>';
      var category = currentCategory();

      $.get(url, {category: category}).done(function (res) {
        setOptions(res.options);
      });
    }

    setJobOptions();

  });
</script>
